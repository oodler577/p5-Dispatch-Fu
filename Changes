Revision history for Dispatch::Fu. 

0.8  Wed Aug 23 10:05:09 2023
     - TRIAL
     - released initial version of Dispatch::Fu on to the
     unsuspecting echo chambers of the Perl-verse

0.9  Wed Aug 23 11:05:09 2023
     - TRIAL
     - added POD

0.10 Wed Aug 23 12:05:09 2023
     - intended to be a TRIAL, but got released without
     - tweaked POD

0.11 Wed Aug 23 13:05:09 2023
     - tweaked POD

0.91 Wed Aug 23 14:05:09 2023
     - fixing version number for proper CPAN indexing
     - no functional changes

0.92 Wed Aug 23 15:05:09 2023
     - fixing version number for proper CPAN indexing
     - no functional changes

0.93 Wed Aug 23 16:05:09 2023
     - POD updates
     - no functional changes

0.94 Wed Aug 23 17:05:09 2023
     - POD updates
     - no functional changes

0.95 Wed Aug 23 18:05:09 2023
     - POD updates
     - no functional changes

0.96 Wed Aug 23 19:05:09 2023
     - POD updates
     - no functional changes

0.97 Sat Sep 16 20:05:09 2023
     - added "cases" keyword that can be used inside of
       the "dispatch" BLOCK to get a list of cases added
       by the C<on> keyword. When used outside of the a
       "dispatch" block, it returns undef.
     - "cases" introspection allows for much more idiomatic
       recipes inside of the "dispatch" BLOCK.

0.98 Sat Sep 27 20:05:09 2023
     - added xdefault handling the situation where
       the case name is the same as the string value,
       which is the simlest case possible and what people
       use straight HASH ref dispatching for; see the
       tests and POD examples

0.99 Sat Sep 30 20:05:09 2023
     - fixed xdefault to allow for the first parameter to
       to be C<undef>

1.00 Tues Dec 12 20:00:00 2023
     - changes reverted but published
     - replaced with 1.1

1.01 Tues Dec 12 20:00:01 2023
     - adding a C<warn> when C<on> is used in the void context,
       which could become a more common error (thanks to tonycoz)

1.02 Tues Dec 12 00:10:02 2023
     - added proper warnings using "Carp" module; updated POD
     - added "croak" if no cases are defined or unhandles cases are called
     - public thank you to tonycoz for the suggestion to add
       a warn when "on" is used in void or scalar context

1.03 Wed Dec 13 01:01:01 2023
     - fixed POD warnings

1.04 Wed Dec 13 01:02:01 2023
     - found and fixed an issue with the dispatched subroutine
       not being able to return whatever it wants (e.g., fixed);
       it now works as expected it - no restrictions on what it
       can return. See C<t/04-return-values.t> for an example
     - added test, updated POD to clarify this point
